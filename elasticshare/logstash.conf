input {
	file {
		path => "/home/vagrant/elasticshare/apache-access/*"
		type => "apache-access"
		start_position => "beginning"
		sincedb_path => "/home/vagrant/logstash_sincedb/.sincedb_apache-access"
	}

	file {
		path => "/home/vagrant/elasticshare/els/*"
		type => "els"
		start_position => "beginning"
		sincedb_path => "/home/vagrant/logstash_sincedb/.sincedb_els"
		codec => "json"
	}	
}

filter {
  if [type] == "apache-access" {
	  grok {
	    match => { "message" => "%{IPORHOST:clientip} %{USER:ident} %{USER:auth} \[%{HTTPDATE:timestamp}\] \"(?:%{WORD:httpmethod} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:response} (?:%{NUMBER:bytes}|-) %{QS:referrer} %{QS:agent}" }
	    remove_field => "message"
	    remove_field => "ident"
	    remove_field => "auth"
	    remove_field => "host"
	    remove_field => "path"

	  }
	  date {
	    match => [ "timestamp", "dd/MMM/YYYY:HH:mm:ss Z" ]
	    remove_field => ["timestamp"]
	  }
	  geoip {
	    source => "clientip"
	  }
	  useragent {
	    source => "agent"
	    target => "useragent"
	  }
  }

  if [type] == "els" {

	if [EdgeServerIP] == "" {
	  mutate {
	   remove_field => ["[EdgeServerIP]"]
	  }
	}  

	if [ClientIP] == "" {
	  mutate {
	   remove_field => ["[ClientIP]"]
	  }
	}  

	if [OriginIP] == "" {
	  mutate {
	   remove_field => ["[OriginIP]"]
	  }
	}  

    ruby {
      code => "
      	event.set('[EdgeStartTimeUnix]', event.get('EdgeStartTimestamp') / 1000000 )
      	event.set('[RequestTimeMS]', ((event.get('EdgeEndTimestamp')-event.get('EdgeStartTimestamp'))/1000000))
		
      "

    }  

	date {
		match => [ "EdgeStartTimeUnix", "UNIX_MS" ]
		timezone => "UTC"
	}

	mutate { 
		remove_field => ["@version","host","path","EdgeStartTimeUnix"] 
	}
  }
}


output {
	if [type] == "apache-access" {
		elasticsearch{
			"index" => "apache-access"
		}
	}
	if [type] == "els" {
		elasticsearch{
			"index" => "els"
		}
	}	
	stdout {
		codec => rubydebug
	}
}		
